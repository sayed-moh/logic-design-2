//test bench for floating-point multiplication
module mul_flp_tb;
reg [31:0] flp_a, flp_b;
wire[31:0] res;
//display variables
//initial
//$monitor ("sign = %b, exp_biased = %b, exp_unbiased = %b, prod = %b", sign, exp_sum, exp_unbiased, prod);
//apply input vectors
initial
begin
//+5 x +3 = +15
// s ----e---- --------------f-------------
#0 flp_a = 32'b0_10000001_01000000000000000000000;
flp_b = 32'b0_10000000_10000000000000000000000;



//+6 x +4 = +24
// s ----e---- --------------f-------------
#10 flp_a = 32'b0_10000001_10000000000000000000000;
flp_b = 32'b0_10000001_00000000000000000000000;



//-5 x +5 = -25
// s ----e---- --------------f-------------
#10 flp_a = 32'b1_10000001_01000000000000000000000;
flp_b = 32'b0_10000001_01000000000000000000000;



//+7 x -5 = -35
// s ----e---- --------------f-------------
#10 flp_a = 32'b0_10000001_11000000000000000000000;
flp_b = 32'b1_10000001_01000000000000000000000;



//+25 x +25 = +625
// s ----e---- --------------f-------------
#10 flp_a = 32'b0_10000011_10010000000000000000000;
flp_b = 32'b0_10000011_10010000000000000000000;



//continued on next page

//+76 x +55 = +4180
// s ----e---- --------------f-------------
#10 flp_a = 32'b0_10000101_00110000000000000000000;
flp_b = 32'b0_10000100_10111000000000000000000;



//-48 x -17 = +816
// s ----e---- --------------f-------------
#10 flp_a = 32'b1_10000100_10000000000000000000000;
flp_b = 32'b1_10000011_00010000000000000000000;



//+3724 x +853 = +3,176,572
// s ----e---- --------------f-------------
#10 flp_a = 32'b0_10001010_11010001100000000000000;
flp_b = 32'b0_10001000_10101010100000000000000;


#10 $stop;
end
//instantiate the module into the test bench
fp_mul inst1 (
.flp_a(flp_a),
.flp_b(flp_b),
.flp_res(res)
);
endmodule
